(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
'use strict';

var _dom = require('../../utils/dom.js');

var name = 'tunnelVision';
var cssUrl = chrome.extension.getURL('/simulations/tunnelVision/css/main.css');

var canvas = null;
var context = null;
var mouseX = 0;
var mouseY = 0;
var size = 0;
var css = null;

function setSize() {
  canvas.setAttribute('width', document.documentElement.clientWidth);
  canvas.setAttribute('height', document.documentElement.clientHeight);
  size = Math.min(window.innerWidth * .3, 300);
  update();
}

function setMousePosition(e) {
  mouseX = e.clientX;
  mouseY = e.clientY;
  update();
}

function update() {
  context.clearRect(0, 0, window.innerWidth, window.innerHeight);

  context.fillStyle = 'black';
  context.rect(0, 0, window.innerWidth, window.innerHeight);
  context.fill();

  context.save();

  context.globalCompositeOperation = 'destination-out';

  var gradient = context.createRadialGradient(mouseX, mouseY, size / 2, mouseX, mouseY, 0);
  gradient.addColorStop(0, 'transparent');
  gradient.addColorStop(.25, 'white');
  gradient.addColorStop(1, 'white');
  context.fillStyle = gradient;
  context.fillRect(mouseX - size / 2, mouseY - size / 2, size, size);

  context.restore();
}

function start() {
  css = (0, _dom.addCss)(cssUrl);

  canvas = document.createElement('canvas');
  context = canvas.getContext('2d');

  canvas.setAttribute('id', 'wds-tunnelVisionCanvas');
  document.body.appendChild(canvas);

  window.addEventListener("resize", setSize, false);
  canvas.addEventListener("mousemove", setMousePosition, false);

  setSize();
  update();
}

function stop() {
  if (css) {
    (0, _dom.removeElement)(css);
  }

  if (canvas) {
    (0, _dom.removeElement)(canvas);
  }

  // TODO: remove listeners
}

chrome.runtime.onMessage.addListener(function (request) {
  if (request.action === 'startSimulation' && request.simulation === name) {
    start();
  } else if (request.action === 'stopSimulation' && request.simulation === name) {
    stop();
  }
});


},{"../../utils/dom.js":2}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addCss = addCss;
exports.addScript = addScript;
exports.addStyle = addStyle;
exports.appendHTML = appendHTML;
exports.getTextNodes = getTextNodes;
exports.removeElement = removeElement;
exports.setStyle = setStyle;
function addCss(href, callback) {
  var l = document.createElement('link');
  l.setAttribute('href', href);
  l.setAttribute('rel', 'stylesheet');
  l.onload = callback;
  document.getElementsByTagName('head')[0].appendChild(l);
  return l;
}

function addScript(src, callback) {
  var s = document.createElement('script');
  s.setAttribute('src', src);
  s.onload = callback;
  document.getElementsByTagName('head')[0].appendChild(s);
  return s;
}

function addStyle(str) {
  var s = document.createElement('style');
  s.innerText = str;
  document.getElementsByTagName('head')[0].appendChild(s);
  return s;
}

function appendHTML(el, html) {
  var tmpEl = document.createElement('div');
  tmpEl.innerHTML = html;

  while (tmpEl.firstChild) {
    el.appendChild(tmpEl.firstChild);
  }
}

function getTextNodes(node) {
  var all = [];
  for (node = node.firstChild; node; node = node.nextSibling) {
    if (node.nodeType == 3) all.push(node);else all = all.concat(getTextNodes(node));
  }
  return all;
}

function removeElement(el) {
  el.parentNode.removeChild(el);
}

function setStyle(element, style) {
  for (var s in style) {
    element.style[s] = style[s];
  }
}


},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
