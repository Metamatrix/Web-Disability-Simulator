(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _math = require('../../utils/math.js');

var _dom = require('../../utils/dom.js');

(function () {

  var shakeSpeed = 60;
  var shakePositionInterval = 1500;

  var cursor = document.createElement('div');
  var offsetX = 0;
  var offsetY = 0;
  var mousePosX = 0;
  var mousePosY = 0;

  cursor.setAttribute('id', 'wds-parkinsonsCursor');

  document.body.appendChild(cursor);

  var appVersion = navigator.appVersion;
  var cursorImgUrl = '';

  if (appVersion.includes('Mac')) {
    cursorImgUrl = chrome.extension.getURL('/simulations/parkinsons/img/cursor_mac.svg');
  } else {
    cursorImgUrl = chrome.extension.getURL('/simulations/parkinsons/img/cursor_windows.svg');
  }

  cursor.style.background = 'url(' + cursorImgUrl + ')';

  document.addEventListener('mousemove', function (e) {

    mousePosX = e.pageX + offsetX;
    mousePosY = e.pageY + offsetY;

    console.log({ left: mousePosX + 'px', top: mousePosY + 'px', transition: 'left 0.05s, top 0.05s' });

    (0, _dom.setStyle)(cursor, { left: mousePosX + 'px', top: mousePosY + 'px', transition: 'left 0.05s, top 0.05s' });
  });

  setInterval(function () {
    offsetX = (0, _math.random)(-shakeSpeed, shakeSpeed);
    offsetY = (0, _math.random)(-shakeSpeed, shakeSpeed);
  }, shakePositionInterval);

  document.querySelectorAll('*', function (el) {

    el.addEventListener('click', function (e) {

      var currentElement = e.target,
          elementRect = e.target.getBoundingClientRect();
      cursorRect = cursor.getBoundingClientRect(), offset = cursorRect.top - elementRect.top, clickHit = (0, _math.pointInRect)(mousePosX, mousePosY, elementRect);

      if (!clickHit) {
        e.preventDefault();
      }
    });
  });
})();


},{"../../utils/dom.js":2,"../../utils/math.js":3}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.appendHTML = appendHTML;
exports.setStyle = setStyle;
function appendHTML(el, html) {
  var tmpEl = document.createElement('div');
  tmpEl.innerHTML = html;

  while (tmpEl.firstChild) {
    el.appendChild(tmpEl.firstChild);
  }
}

function setStyle(element, style) {
  for (var s in style) {
    element.style[s] = style[s];
  }
}


},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.random = random;
exports.pointInRect = pointInRect;
exports.inRange = inRange;
function random(min, max) {
  return Math.floor(min + Math.random() * (max - min + 1));
}

function pointInRect(x, y, rect) {
  return inRange(x, rect.x, rect.x + rect.width) && inRange(y, rect.y, rect.y + rect.height);
}

function inRange(value, min, max) {
  return value >= Math.min(min, max) && value <= Math.max(min, max);
}


},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
