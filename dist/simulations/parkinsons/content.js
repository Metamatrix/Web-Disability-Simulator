(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _math = require('../../utils/math.js');

var _dom = require('../../utils/dom.js');

var name = 'parkinsons';
var cssUrl = chrome.extension.getURL('/simulations/parkinsons/css/main.css');
var shakeSpeed = 60;
var shakePositionInterval = 1500;
var appVersion = navigator.appVersion;

var cursorImgUrl = '',
    cursor = null,
    posInterval = null,
    cursorPosX = 0,
    cursorPosY = 0,
    offsetX = 0,
    offsetY = 0,
    css = null;

function mousemoveHandler(e) {
  cursorPosX = e.pageX + offsetX;
  cursorPosY = e.pageY + offsetY;
  (0, _dom.setStyle)(cursor, { left: cursorPosX + 'px', top: cursorPosY + 'px', transition: 'left 0.05s, top 0.05s' });
}

function elementClickHandler(e) {
  // TODO: Make this work
  var currentElement = e.target,
      elementRect = currentElement.getBoundingClientRect(),
      clickHit = (0, _math.pointInRect)(cursorPosX, cursorPosY, elementRect);

  if (!clickHit) {
    e.preventDefault();
  }
}

function setOffset() {
  offsetX = (0, _math.random)(-shakeSpeed, shakeSpeed);
  offsetY = (0, _math.random)(-shakeSpeed, shakeSpeed);
}

function start() {

  var cursorImg = appVersion.includes('Mac') ? 'cursor_mac.svg' : 'cursor_windows.svg';
  var cursorImgUrl = chrome.extension.getURL('/simulations/parkinsons/img/' + cursorImg);

  css = (0, _dom.addCss)(cssUrl);

  cursor = document.createElement('div');

  cursor.style.background = 'url(' + cursorImgUrl + ')';
  cursor.setAttribute('id', 'wds-parkinsonsCursor');

  document.body.appendChild(cursor);

  document.addEventListener('mousemove', mousemoveHandler);

  document.querySelectorAll('*', function (el) {
    el.addEventListener('click', elementClickHandler);
  });

  posInterval = setInterval(setOffset, shakePositionInterval);
}

function stop() {

  (0, _dom.removeElement)(cursor);

  if (css) {
    (0, _dom.removeElement)(css);
  }

  if (posInterval) {
    clearInterval(posInterval);
  }

  // TODO: remove listeners
}

chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
  if (request.action === 'startSimulation' && request.simulation === name) {
    start();
  } else if (request.action === 'stopSimulation' && request.simulation === name) {
    stop();
  }
});


},{"../../utils/dom.js":2,"../../utils/math.js":3}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addCss = addCss;
exports.addScript = addScript;
exports.addStyle = addStyle;
exports.appendHTML = appendHTML;
exports.getTextNodes = getTextNodes;
exports.removeElement = removeElement;
exports.setStyle = setStyle;
function addCss(href, callback) {
  var l = document.createElement('link');
  l.setAttribute('href', href);
  l.setAttribute('rel', 'stylesheet');
  l.onload = callback;
  document.getElementsByTagName('head')[0].appendChild(l);
  return l;
}

function addScript(src, callback) {
  var s = document.createElement('script');
  s.setAttribute('src', src);
  s.onload = callback;
  document.getElementsByTagName('head')[0].appendChild(s);
  return s;
}

function addStyle(str) {
  var s = document.createElement('style');
  s.innerText = str;
  document.getElementsByTagName('head')[0].appendChild(s);
  return s;
}

function appendHTML(el, html) {
  var tmpEl = document.createElement('div');
  tmpEl.innerHTML = html;

  while (tmpEl.firstChild) {
    el.appendChild(tmpEl.firstChild);
  }
}

function getTextNodes(node) {
  var all = [];
  for (node = node.firstChild; node; node = node.nextSibling) {
    if (node.nodeType == 3) all.push(node);else all = all.concat(getTextNodes(node));
  }
  return all;
}

function removeElement(el) {
  el.parentNode.removeChild(el);
}

function setStyle(element, style) {
  for (var s in style) {
    element.style[s] = style[s];
  }
}


},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.random = random;
exports.pointInRect = pointInRect;
exports.inRange = inRange;
function random(min, max) {
  return Math.floor(min + Math.random() * (max - min + 1));
}

function pointInRect(x, y, rect) {
  return inRange(x, rect.x, rect.x + rect.width) && inRange(y, rect.y, rect.y + rect.height);
}

function inRange(value, min, max) {
  return value >= Math.min(min, max) && value <= Math.max(min, max);
}


},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
