(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
'use strict';

var _dom = require('../../utils/dom.js');

var name = 'concentration';

//dom elements to apply animations on
var h2 = "h2";
var p = "p";
var img = "img";

//dom elements to be created
var imgEl_0 = ".wds-img-element";
var textEl_0 = ".wds-text-element-0";
var textEl_1 = ".wds-text-element-1";
var textEl_2 = ".wds-text-element-2";
var textEl_3 = ".wds-text-element-3";
var textEl_4 = ".wds-text-element-4";

//classes for css animations
var paragraphAnimation = "wds-paragraph-animation";
var headingAnimation = "wds-heading-animation";
var imgAnimation_0 = "wds-img-animation-0";
var imgAnimation_1 = "wds-img-animation-1";
var textAnimation_0 = "wds-text-animation-0";
var textAnimation_1 = "wds-text-animation-1";
var textAnimation_2 = "wds-text-animation-2";
var textAnimation_3 = "wds-text-animation-3";
var textAnimation_4 = "wds-text-animation-4";

var css = null;

function start() {

  var cssUrl = chrome.extension.getURL('/simulations/' + name + '/css/main.css');

  css = (0, _dom.addCss)(cssUrl);

  function createElement(element, classname, textNode) {
    var el = document.createElement(element);
    el.setAttribute('class', classname);
    document.body.appendChild(el);
    if (textNode) {
      el.appendChild(document.createTextNode(textNode));
    }
  }

  createElement('div', 'wds-img-element');

  function createTextElements(text, index) {
    createElement('span', 'wds-text-element-' + index, text);
  }

  var texts = ['Did I eat lunch?', 'I have to get back to work soon...', 'The ventilation sounds a lot today. bzzzzzz', 'Should I answer that text message?', 'Must concentrate, must concentrate, must concentrate'];

  texts.forEach(createTextElements);

  function addClass(element, classname) {
    var el = document.querySelectorAll(element);

    for (var i = 0; i < el.length; i++) {
      el[i].classList.toggle(classname);
    }
  }

  function removeClass(element, classname) {
    var el = document.querySelectorAll(element);

    for (var i = 0; i < el.length; i++) {
      el[i].classList.remove(classname);
    }
  }

  //add and remove animation classes, then loop

  function loopAnimations() {

    setTimeout(function () {
      addClass(p, paragraphAnimation);
      addClass(imgEl_0, imgAnimation_0);
      addClass(img, imgAnimation_1);
      addClass(h2, headingAnimation);
    }, 500);

    setTimeout(function () {
      removeClass(imgEl_0, imgAnimation_0);
      addClass(textEl_0, textAnimation_0);
    }, 5000);

    setTimeout(function () {
      removeClass(textEl_0, textAnimation_0);
      addClass(textEl_1, textAnimation_1);
    }, 12000);

    setTimeout(function () {
      removeClass(textEl_1, textAnimation_1);
      addClass(textEl_2, textAnimation_2);
    }, 20000);

    setTimeout(function () {
      removeClass(textEl_2, textAnimation_2);
      addClass(textEl_3, textAnimation_3);
    }, 26000);

    setTimeout(function () {
      removeClass(textEl_3, textAnimation_3);
      addClass(textEl_4, textAnimation_4);
    }, 32000);

    setTimeout(function () {
      removeClass(textEl_4, textAnimation_4);
      removeClass(p, paragraphAnimation);
      removeClass(img, imgAnimation_1);
      removeClass(h2, headingAnimation);
      loopAnimations();
    }, 38000);
  }
  loopAnimations();
}

function stop() {

  (0, _dom.removeElement)(css);

  function removeElements(element) {
    var domElement = document.querySelector('' + element);
    if (domElement) {
      (0, _dom.removeElement)(domElement);
    }
  }

  var elements = [textEl_0, textEl_1, textEl_2, textEl_3, textEl_4, imgEl_0];

  elements.forEach(removeElements);
}

chrome.runtime.onMessage.addListener(function (request) {
  if (request.action === 'startSimulation' && request.simulation === name) {
    start();
  } else if (request.action === 'stopSimulation' && request.simulation === name) {
    stop();
  }
});


},{"../../utils/dom.js":2}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addCss = addCss;
exports.addScript = addScript;
exports.addStyle = addStyle;
exports.appendHTML = appendHTML;
exports.getTextNodes = getTextNodes;
exports.removeElement = removeElement;
exports.setStyle = setStyle;
function addCss(href, callback) {
  var l = document.createElement('link');
  l.setAttribute('href', href);
  l.setAttribute('rel', 'stylesheet');
  l.onload = callback;
  document.getElementsByTagName('head')[0].appendChild(l);
  return l;
}

function addScript(src, callback) {
  var s = document.createElement('script');
  s.setAttribute('src', src);
  s.onload = callback;
  document.getElementsByTagName('head')[0].appendChild(s);
  return s;
}

function addStyle(str) {
  var s = document.createElement('style');
  s.innerText = str;
  document.getElementsByTagName('head')[0].appendChild(s);
  return s;
}

function appendHTML(el, html) {
  var tmpEl = document.createElement('div');
  tmpEl.innerHTML = html;

  while (tmpEl.firstChild) {
    el.appendChild(tmpEl.firstChild);
  }
}

function getTextNodes(node) {
  var all = [];
  for (node = node.firstChild; node; node = node.nextSibling) {
    if (node.nodeType == 3) all.push(node);else all = all.concat(getTextNodes(node));
  }
  return all;
}

function removeElement(el) {
  el.parentNode.removeChild(el);
}

function setStyle(element, style) {
  for (var s in style) {
    element.style[s] = style[s];
  }
}


},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
