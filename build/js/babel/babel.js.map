{"version":3,"sources":["../../../src/app.js"],"names":["data","$","document","ready","tooltip","infoHeading","infoParagraph","adviceList","moreInfoParagraph","moreInfoPanel","dropdownListheading","UI","dropdownHeading","append","click","menuBtn","menuBtnId","id","attr","fact","facts","find","findProperty","listItems","moreInfo","chrome","browserAction","setIcon","path","storage","sync","set","empty","hide","animate","left","parseInt","css","outerWidth","text","closest","simulations","name","each","i","value","show","hasClass","resetSimulation","remove","tabs","create","url","on","parent","toggle","window","onload","get","activeSimulation","obj"],"mappings":"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","file":"babel.js","sourcesContent":["import {resetCSS} from '../../src/simulations/general.js'\r\nimport {farsightedness} from '../../src/simulations/farsightedness/index.js'\r\nimport {tunnelVision} from '../../src/simulations/tunnelVision/index.js'\r\nimport {redGreenColorBlindness} from '../../src/simulations/redGreenColorBlindness/index.js'\r\nimport * as data from '../../src/UI/data/data.json';\r\n\r\n\r\n$(document).ready(() => {\r\n\r\n  const tooltip = $( \".tool-tip\" );\r\n  const infoHeading = $(\".disability-info-heading\"); \r\n  const infoParagraph = $( \".disability-info-paragraph\" ); \r\n  const adviceList = $( \".advice-list\" ); \r\n  const moreInfoParagraph = $( \".more-info-paragraph\" ); \r\n  const moreInfoPanel = $( \"#more-info-panel\" ); \r\n  const dropdownListheading = data.UI[0].dropdownHeading; \r\n\r\n  $(\".navbar-header\").append(dropdownListheading); \r\n\r\n  //menu button click\r\n  \r\n  $(\".menu-btn\").click(function(){\r\n\r\n    const menuBtn = $(this); \r\n    const menuBtnId = menuBtn[0].id;\r\n    const id = menuBtn.attr(\"id\");\r\n    const fact = data.facts.find(findProperty).fact; \r\n    const listItems = data.facts.find(findProperty).listItems; \r\n    const moreInfo = data.facts.find(findProperty).moreInfo; \r\n\r\n    chrome.browserAction.setIcon({\r\n      path : \"img/icon_active.png\"\r\n    });\r\n\r\n    chrome.storage.sync.set({'activeSimulation': menuBtnId});\r\n\r\n    infoHeading.empty();\r\n    infoParagraph.empty();\r\n    adviceList.empty();\r\n    moreInfoParagraph.empty(); \r\n    moreInfoPanel.hide();\r\n\r\n    tooltip.animate({\r\n      left: parseInt(tooltip.css('left'),10) == 0 ?\r\n        -tooltip.outerWidth() :\r\n        0\r\n    });\r\n\r\n    infoHeading.append(menuBtn.text());\r\n\r\n    menuBtn.closest(\".dropdown\").find(\".selected\").text(menuBtn.text());\r\n\r\n    function findProperty(simulations) { \r\n      return simulations.name === id;\r\n    }\r\n\r\n    infoParagraph.append(fact);\r\n      \r\n    $.each(listItems, (i, value) => {\r\n      adviceList.append(`<li>${value}</li>`);\r\n    });\r\n\r\n    if(moreInfo) {\r\n      moreInfoPanel.show();\r\n      moreInfoParagraph.append(moreInfo);\r\n    }\r\n\r\n    if (menuBtn.hasClass(\"farsightedness\")) {\r\n      farsightedness();\r\n    } \r\n\r\n    if (menuBtn.hasClass(\"tunnelVision\")) {\r\n      tunnelVision();\r\n    } \r\n\r\n    if (menuBtn.hasClass(\"redGreenColorBlindness\")) {\r\n      redGreenColorBlindness();\r\n    }\r\n    \r\n  });\r\n\r\n  function resetSimulation(){\r\n    chrome.browserAction.setIcon({\r\n      path : \"img/icon.png\"\r\n    });\r\n\r\n    tooltip.animate({\r\n      left: parseInt(tooltip.css('marginLeft'),10) == 0 ?\r\n        tooltip.outerWidth() :\r\n        0\r\n    }); \r\n    \r\n    $(\"#Syn\").text(\"Syn\");\r\n    $(\"#Motorik\").text(\"Motorik\"); \r\n\r\n    resetCSS();\r\n    chrome.storage.sync.remove('activeSimulation');\r\n  }\r\n\r\n  //reset-btn click\r\n\r\n  $(\"#reset-btn\").click(() => {\r\n    resetSimulation(); \r\n  });\r\n\r\n  //github link click \r\n\r\n  $(\".github-link\").click(() => {\r\n    chrome.tabs.create({url: 'https://github.com/Metamatrix/Web-Disability-Simulator'}); \r\n  });\r\n\r\n  //panel collapse, show arrows: \r\n\r\n  $('.collapse').on('shown.bs.collapse', function(){\r\n      $(this).parent().find(\".down-arrow, .up-arrow\").toggle();\r\n    }).on('hidden.bs.collapse', function(){\r\n      $(this).parent().find(\".down-arrow, .up-arrow\").toggle();\r\n  });\r\n\r\n  //keep chosen simulation fact tooltip when extension is closed and opened again. \r\n\r\n  window.onload = () => {\r\n\r\n      chrome.storage.sync.get('activeSimulation', obj => {\r\n    \r\n      const activeSimulation = obj.activeSimulation;\r\n      \r\n      function findProperty(simulations) { \r\n        return simulations.name === activeSimulation;\r\n      }\r\n\r\n      if (activeSimulation != null) {\r\n\r\n        tooltip.css(\"left\", \"0\");\r\n\r\n        infoHeading.append( $(`#${activeSimulation}`).text() );\r\n\r\n        $(`#${activeSimulation}`).closest(\".dropdown\").find(\".selected\").text($(`#${activeSimulation}`).text());\r\n\r\n        const id = $(`#${activeSimulation}`).attr(\"id\");\r\n\r\n        const fact = data.facts.find(findProperty).fact; \r\n        const listItems = data.facts.find(findProperty).listItems; \r\n        const moreInfo = data.facts.find(findProperty).moreInfo;\r\n\r\n        infoParagraph.append(fact);\r\n              \r\n        $.each(listItems, (i, value) => {\r\n          adviceList.append(`<li>${value}</li>`);\r\n        });\r\n\r\n        if(moreInfo) {\r\n          moreInfoPanel.show();\r\n          moreInfoParagraph.append(moreInfo);\r\n        }\r\n\r\n     }\r\n\r\n    }); \r\n  \r\n  };\r\n\r\n//function that runs when tab is reloaded\r\n/*  chrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\r\n    resetSimulation();\r\n  });*/\r\n  \r\n});"]}